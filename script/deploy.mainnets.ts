import {
  BoundingCurveUpgradableAVAX__factory,
  BoundingCurveUpgradableAVAX,
} from "../typechain-types";
import { Contract, ContractFactory } from "ethers";

import { ethers } from "hardhat";
import hre from "hardhat";
const bytecode =
  "60a060405234801562000010575f80fd5b50604051620011fc380380620011fc833981016040819052620000339162000545565b33848460036200004483826200066a565b5060046200005382826200066a565b5050506001600160a01b0381166200008557604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b62000090816200012d565b506200009d33836200017e565b60068190556040516364e329cb60e11b81523060048201526001600160a01b03868116602483015287169063c9c65396906044016020604051808303815f875af1158015620000ee573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000114919062000736565b6001600160a01b0316608052506200077f945050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216620001a95760405163ec442f0560e01b81525f60048201526024016200007c565b620001b65f8383620001ba565b5050565b620001c783838362000339565b5f620001db6005546001600160a01b031690565b6001600160a01b03161462000334576080516001600160a01b0316826001600160a01b03161415806200021b57506005546001600160a01b038481169116145b6200028f5760405162461bcd60e51b815260206004820152603960248201527f474545545347617264656e546f6b656e3a2043616e27742073656e6420746f6b60448201527f656e7320746f2070616972206265666f7265206c61756e63680000000000000060648201526084016200007c565b5f600654118015620002af57506005546001600160a01b03838116911614155b1562000334576006546001600160a01b0383165f908152602081905260409020541115620003345760405162461bcd60e51b815260206004820152602b60248201527f474545545347617264656e546f6b656e3a204d61782077616c6c6574206c696d60448201526a1a5d08195e18d95959195960aa1b60648201526084016200007c565b505050565b6001600160a01b03831662000367578060025f8282546200035b919062000759565b90915550620003d99050565b6001600160a01b0383165f9081526020819052604090205481811015620003bb5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200007c565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620003f75760028054829003905562000415565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200045b91815260200190565b60405180910390a3505050565b80516001600160a01b03811681146200047f575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112620004a8575f80fd5b81516001600160401b0380821115620004c557620004c562000484565b604051601f8301601f19908116603f01168101908282118183101715620004f057620004f062000484565b81604052838152602092508660208588010111156200050d575f80fd5b5f91505b8382101562000530578582018301518183018401529082019062000511565b5f602085830101528094505050505092915050565b5f805f805f8060c087890312156200055b575f80fd5b620005668762000468565b9550620005766020880162000468565b60408801519095506001600160401b038082111562000593575f80fd5b620005a18a838b0162000498565b95506060890151915080821115620005b7575f80fd5b50620005c689828a0162000498565b9350506080870151915060a087015190509295509295509295565b600181811c90821680620005f657607f821691505b6020821081036200061557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200033457805f5260205f20601f840160051c81016020851015620006425750805b601f840160051c820191505b8181101562000663575f81556001016200064e565b5050505050565b81516001600160401b0381111562000686576200068662000484565b6200069e81620006978454620005e1565b846200061b565b602080601f831160018114620006d4575f8415620006bc5750858301515b5f19600386901b1c1916600185901b1785556200072e565b5f85815260208120601f198616915b828110156200070457888601518255948401946001909101908401620006e3565b50858210156200072257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f6020828403121562000747575f80fd5b620007528262000468565b9392505050565b808201808211156200077957634e487b7160e01b5f52601160045260245ffd5b92915050565b608051610a5d6200079f5f395f81816101cd015261061b0152610a5d5ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c80638da5cb5b11610093578063dd62ed3e11610063578063dd62ed3e14610202578063f2fde38b1461023a578063f8b45b051461024d578063fc6b151c14610256575f80fd5b80638da5cb5b1461019b57806395d89b41146101c0578063a8b08982146101c8578063a9059cbb146101ef575f80fd5b806323b872dd116100ce57806323b872dd14610147578063313ce5671461015a57806370a0823114610169578063715018a614610191575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc610269565b60405161010991906108a0565b60405180910390f35b610125610120366004610907565b6102f9565b6040519015158152602001610109565b6002545b604051908152602001610109565b61012561015536600461092f565b610312565b60405160128152602001610109565b610139610177366004610968565b6001600160a01b03165f9081526020819052604090205490565b610199610335565b005b6005546001600160a01b03165b6040516001600160a01b039091168152602001610109565b6100fc610348565b6101a87f000000000000000000000000000000000000000000000000000000000000000081565b6101256101fd366004610907565b610357565b610139610210366004610988565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610199610248366004610968565b610364565b61013960065481565b6101996102643660046109b9565b6103a6565b606060038054610278906109d0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a4906109d0565b80156102ef5780601f106102c6576101008083540402835291602001916102ef565b820191905f5260205f20905b8154815290600101906020018083116102d257829003601f168201915b5050505050905090565b5f336103068185856103b3565b60019150505b92915050565b5f3361031f8582856103c5565b61032a858585610440565b506001949350505050565b61033d61049d565b6103465f6104ca565b565b606060048054610278906109d0565b5f33610306818585610440565b61036c61049d565b6001600160a01b03811661039a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6103a3816104ca565b50565b6103ae61049d565b600655565b6103c0838383600161051b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461043a578181101561042c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610391565b61043a84848484035f61051b565b50505050565b6001600160a01b03831661046957604051634b637e8f60e11b81525f6004820152602401610391565b6001600160a01b0382166104925760405163ec442f0560e01b81525f6004820152602401610391565b6103c08383836105ed565b6005546001600160a01b031633146103465760405163118cdaa760e01b8152336004820152602401610391565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166105445760405163e602df0560e01b81525f6004820152602401610391565b6001600160a01b03831661056d57604051634a1406b160e11b81525f6004820152602401610391565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561043a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105df91815260200190565b60405180910390a350505050565b6105f883838361077a565b5f61060b6005546001600160a01b031690565b6001600160a01b0316146103c0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614158061066757506005546001600160a01b038481169116145b6106d95760405162461bcd60e51b815260206004820152603960248201527f474545545347617264656e546f6b656e3a2043616e27742073656e6420746f6b60448201527f656e7320746f2070616972206265666f7265206c61756e6368000000000000006064820152608401610391565b5f6006541180156106f857506005546001600160a01b03838116911614155b156103c0576006546001600160a01b0383165f9081526020819052604090205411156103c05760405162461bcd60e51b815260206004820152602b60248201527f474545545347617264656e546f6b656e3a204d61782077616c6c6574206c696d60448201526a1a5d08195e18d95959195960aa1b6064820152608401610391565b6001600160a01b0383166107a4578060025f8282546107999190610a08565b909155506108149050565b6001600160a01b0383165f90815260208190526040902054818110156107f65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610391565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108305760028054829003905561084e565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161089391815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156108cc578581018301518582016040015282016108b0565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610902575f80fd5b919050565b5f8060408385031215610918575f80fd5b610921836108ec565b946020939093013593505050565b5f805f60608486031215610941575f80fd5b61094a846108ec565b9250610958602085016108ec565b9150604084013590509250925092565b5f60208284031215610978575f80fd5b610981826108ec565b9392505050565b5f8060408385031215610999575f80fd5b6109a2836108ec565b91506109b0602084016108ec565b90509250929050565b5f602082840312156109c9575f80fd5b5035919050565b600181811c908216806109e457607f821691505b602082108103610a0257634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561030c57634e487b7160e01b5f52601160045260245ffdfe{ipfs}64736f6c6343000818003300000000000000000000000071524b4f93c58fcbf659783284e38825f0622859000000000000000000000000420000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000033b2e3c9fd0803ce8000000000000000000000000000000000000000000000000108b2a2c28029094000000000000000000000000000000000000000000000000000000000000000000000b4261736564205472756d700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006425452554d500000000000000000000000000000000000000000000000000000";
const BUY_FEE_BPS = 1000n; // 10%
const SELL_FEE_BPS = 1000n; // 10%
const LISTING_FEE_BPS = 500n; // 5%
const MIN_V_LP = 10n ** 18n;

const configs = {
  1: {
    uniswapRouterV2: "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    uniswapFactoryV2: "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
    weth: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    priceAgregator: "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419",
    minVLP: 10n ** 18n,
  },
  56: {
    uniswapRouterV2: "0x10ED43C718714eb63d5aA57B78B54704E256024E",
    uniswapFactoryV2: "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73",
    weth: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
    priceAgregator: "0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE",
    minVLP: 3n * 10n ** 18n,
  },
  8453: {
    uniswapRouterV2: "0x6BDED42c6DA8FBf0d2bA55B2fa120C5e0c8D7891",
    uniswapFactoryV2: "0x71524B4f93c58fcbF659783284E38825f0622859",
    weth: "0x4200000000000000000000000000000000000006",
    priceAgregator: "0x71041dddad3595F9CEd3DcCFBe3D1F4b0a16Bb70",
    minVLP: 10n ** 18n,
  },
  43114: {
    uniswapRouterV2: "0x60aE616a2155Ee3d9A68541Ba4544862310933d4",
    uniswapFactoryV2: "0x9Ad6C38BE94206cA50bb0d90783181662f0Cfa10",
    weth: "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
    priceAgregator: "0x0A77230d17318075983913bC2145DB16C7366156",
    minVLP: 50n * 10n ** 18n,
  },
};

async function main() {
  const [owner] = await ethers.getSigners();

  const chainId = await hre.network.provider.send("eth_chainId");

  console.log("ChainId:", Number(chainId));

  const config = configs[Number(chainId) as 1 | 56 | 8453 | 43114];
  if (!config) throw new Error("ChainId not supported");

  // deploy bounding curve
  const BoundingFactory = new BoundingCurveUpgradableAVAX__factory(owner);

  // @ts-ignore
  const boundingCurve = (await hre.upgrades.deployProxy(
    BoundingFactory,
    [
      "0x346000ba75008c0fBb7565176c5acC921c543aB5",
      "0x59b08ADE2203871EDF20572D4E807691a42b9d11",
      BUY_FEE_BPS,
      SELL_FEE_BPS,
      LISTING_FEE_BPS,
    ],
    {
      kind: "uups",
      constructorArgs: [
        config.priceAgregator,
        config.minVLP,
        config.uniswapFactoryV2,
        config.uniswapRouterV2,
      ],
    }
  )) as BoundingCurveUpgradableAVAX;

  await boundingCurve.waitForDeployment();

  console.log(
    "BoundingCurveUpgradableAVAX deployed to:",
    await boundingCurve.getAddress()
  );
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
